#!/bin/bash

set -x

set -o errexit
set -o pipefail
set -o nounset

kernel="$(realpath "${1}")"
initrd="$(realpath "${2}")"
append="$(cat ${3})"

disk_image="${PWD}/disk.img"

cd /tmp

esp_file="/tmp/boot.img"

#cat > syslinux.cfg <<EOF
#DEFAULT linux
#LABEL linux
#    KERNEL /kernel
#    APPEND ${append}
#    INITRD /initrd.img
#EOF

kernel_file_size="$(stat -c %s "${kernel}")"
initrd_file_size="$(stat -c %s "${initrd}")"
# minimum headroom needed in ESP, in bytes
# 511KiB headroom seems to be enough
blksize=512
onemb=$(( 1024 * 1024 ))

esp_file_size=$(( $kernel_file_size + $initrd_file_size + $onemb ))
# (x+1024)/1024*1024 rounds up to multiple of 1024KB, or 2048 sectors
# some firmwares get confused if the partitions are not aligned on 2048 blocks
# we will round up to the nearest multiple of 2048 blocks
# since each block is 512 bytes, we want the size to be a multiple of
# 2048 blocks * 512 bytes = 1048576 bytes = 1024KB
esp_file_size_kb=$(( ( ( ($esp_file_size+1023)/ 1024 ) + 1023 ) / 1024 * 1024 ))
esp_file_size_sectors=$(( $esp_file_size_kb * 2 ))

# create a raw disk with an EFI boot partition
# Stuff it into a FAT filesystem, making it as small as possible.
rm -f $esp_file
#mkfs.vfat -v -C $esp_file $(( $esp_file_size_kb )) > /dev/null
mkfs.ext4 $esp_file $(( $esp_file_size_sectors ))

mkdir -p /tmp/bootfs
mount -o loop $esp_file /tmp/bootfs
mkdir /tmp/bootfs/boot
cp $kernel /tmp/bootfs/boot/kernel
cp $initrd /tmp/bootfs/boot/initrd
mkdir /tmp/bootfs/boot/grub
cat > /tmp/bootfs/boot/grub/grub.cfg <<EOF
insmod linux
insmod ext2

#menuentry '[loopback]linux' {
#	linux (loop)/boot/kernel $append
#	initrd (loop)/boot/initrd
#}
EOF

#export MTOOLS_SKIP_CHECK=1
#
#mcopy -i $esp_file syslinux.cfg ::/
#mcopy -i $esp_file $kernel ::/kernel
#mcopy -i $esp_file $initrd ::/initrd.img

# install syslinux
#syslinux --install $esp_file
#extlinux --install /tmp/bootfs

# now make our actual filesystem image
# how big an image do we want?
# it should be the size of our ESP file+1MB for BIOS boot + 1MB for MBR + 1MB for backup
esp_file_size_bytes=$(( $(stat -c %s "${esp_file}") + 4*$onemb ))

# and make sure the ESP is bootable for BIOS mode
# settings
mb_blocks=$(( $esp_file_size_bytes / $onemb ))

# make the image
rm -f $disk_image
dd if=/dev/zero of=$disk_image bs=1M count=$mb_blocks

echo "w" | fdisk $disk_image || true
# format one large partition of the apprropriate size
echo ","$esp_file_size_sectors",;" | sfdisk $disk_image

# of course, "one large partition" means minus the 2048 at the beginning
esp_sector_start=2048
 
# copy in our EFI System Partition image
dd if=$esp_file of=$disk_image bs=$blksize count=$esp_file_size_sectors conv=notrunc seek=$esp_sector_start
grub-install --target=i386-pc --recheck --boot-directory=/tmp/bootfs/boot $disk_image
umount /tmp/bootfs
 
## # install mbr
## dd if=/usr/share/syslinux/altmbr.bin bs=439 count=1 conv=notrunc of=$disk_image
## printf '\1' | dd bs=1 count=1 seek=439 conv=notrunc of=$disk_image
## 
## sfdisk -A "$disk_image" 1
